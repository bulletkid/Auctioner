package com.manuanand.auctioner;

import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.server.ResponseStatusException;

@Controller	// This means that this class is a Controller
@RequestMapping(path="/item") // This means URL's start with /item (after Application path)
public class ItemController {
	@Autowired // This means to get the bean called itemRepository
			   // Which is auto-generated by Spring, we will use it to handle the data
	private ItemRepository itemRepository;
	
	@Autowired
	private UserRepository userRepository;
	
	
	@GetMapping(path="/")
	public @ResponseBody Iterable<Item> getAllItems() {
		
		// This returns a JSON or XML with the users
		return itemRepository.findAll();
	}

	@GetMapping(path="/{id}")
	public @ResponseBody Item getSpecificItem(@PathVariable String id) {
		
		Integer itemId = null;
		try {
			itemId = Integer.parseInt(id);
		} catch (NumberFormatException ex) {
			return null;
		}

		Optional<Item> item = itemRepository.findById(itemId);
		if (!item.isEmpty()) {
			return item.get();
		} 

		return null;
	}

	@GetMapping(path="/deleteAll")
	public @ResponseBody void deleteAllItems() {
		
		// This returns a JSON or XML with the users
		itemRepository.deleteAll();
	}
}